/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ResetPasswordRouteImport } from './routes/reset-password'
import { Route as RankingRouteImport } from './routes/ranking'
import { Route as DashboardRouteRouteImport } from './routes/dashboard/route'
import { Route as AuthRouteRouteImport } from './routes/_auth/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as DashboardIndexRouteImport } from './routes/dashboard/index'
import { Route as DashboardTasksRouteImport } from './routes/dashboard/tasks'
import { Route as DashboardShopRouteImport } from './routes/dashboard/shop'
import { Route as DashboardLeaderboardRouteImport } from './routes/dashboard/leaderboard'
import { Route as ArticlesPorQueElegirBuenosProveedoresRouteImport } from './routes/articles/por-que-elegir-buenos-proveedores'
import { Route as AuthSignupRouteImport } from './routes/_auth/signup'
import { Route as AuthSigninRouteImport } from './routes/_auth/signin'

const ResetPasswordRoute = ResetPasswordRouteImport.update({
  id: '/reset-password',
  path: '/reset-password',
  getParentRoute: () => rootRouteImport,
} as any)
const RankingRoute = RankingRouteImport.update({
  id: '/ranking',
  path: '/ranking',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardRouteRoute = DashboardRouteRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRouteRoute = AuthRouteRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardIndexRoute = DashboardIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardTasksRoute = DashboardTasksRouteImport.update({
  id: '/tasks',
  path: '/tasks',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardShopRoute = DashboardShopRouteImport.update({
  id: '/shop',
  path: '/shop',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardLeaderboardRoute = DashboardLeaderboardRouteImport.update({
  id: '/leaderboard',
  path: '/leaderboard',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const ArticlesPorQueElegirBuenosProveedoresRoute =
  ArticlesPorQueElegirBuenosProveedoresRouteImport.update({
    id: '/articles/por-que-elegir-buenos-proveedores',
    path: '/articles/por-que-elegir-buenos-proveedores',
    getParentRoute: () => rootRouteImport,
  } as any)
const AuthSignupRoute = AuthSignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthSigninRoute = AuthSigninRouteImport.update({
  id: '/signin',
  path: '/signin',
  getParentRoute: () => AuthRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthRouteRouteWithChildren
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/ranking': typeof RankingRoute
  '/reset-password': typeof ResetPasswordRoute
  '/signin': typeof AuthSigninRoute
  '/signup': typeof AuthSignupRoute
  '/articles/por-que-elegir-buenos-proveedores': typeof ArticlesPorQueElegirBuenosProveedoresRoute
  '/dashboard/leaderboard': typeof DashboardLeaderboardRoute
  '/dashboard/shop': typeof DashboardShopRoute
  '/dashboard/tasks': typeof DashboardTasksRoute
  '/dashboard/': typeof DashboardIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthRouteRouteWithChildren
  '/ranking': typeof RankingRoute
  '/reset-password': typeof ResetPasswordRoute
  '/signin': typeof AuthSigninRoute
  '/signup': typeof AuthSignupRoute
  '/articles/por-que-elegir-buenos-proveedores': typeof ArticlesPorQueElegirBuenosProveedoresRoute
  '/dashboard/leaderboard': typeof DashboardLeaderboardRoute
  '/dashboard/shop': typeof DashboardShopRoute
  '/dashboard/tasks': typeof DashboardTasksRoute
  '/dashboard': typeof DashboardIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteRouteWithChildren
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/ranking': typeof RankingRoute
  '/reset-password': typeof ResetPasswordRoute
  '/_auth/signin': typeof AuthSigninRoute
  '/_auth/signup': typeof AuthSignupRoute
  '/articles/por-que-elegir-buenos-proveedores': typeof ArticlesPorQueElegirBuenosProveedoresRoute
  '/dashboard/leaderboard': typeof DashboardLeaderboardRoute
  '/dashboard/shop': typeof DashboardShopRoute
  '/dashboard/tasks': typeof DashboardTasksRoute
  '/dashboard/': typeof DashboardIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/dashboard'
    | '/ranking'
    | '/reset-password'
    | '/signin'
    | '/signup'
    | '/articles/por-que-elegir-buenos-proveedores'
    | '/dashboard/leaderboard'
    | '/dashboard/shop'
    | '/dashboard/tasks'
    | '/dashboard/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/ranking'
    | '/reset-password'
    | '/signin'
    | '/signup'
    | '/articles/por-que-elegir-buenos-proveedores'
    | '/dashboard/leaderboard'
    | '/dashboard/shop'
    | '/dashboard/tasks'
    | '/dashboard'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/dashboard'
    | '/ranking'
    | '/reset-password'
    | '/_auth/signin'
    | '/_auth/signup'
    | '/articles/por-que-elegir-buenos-proveedores'
    | '/dashboard/leaderboard'
    | '/dashboard/shop'
    | '/dashboard/tasks'
    | '/dashboard/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
  DashboardRouteRoute: typeof DashboardRouteRouteWithChildren
  RankingRoute: typeof RankingRoute
  ResetPasswordRoute: typeof ResetPasswordRoute
  ArticlesPorQueElegirBuenosProveedoresRoute: typeof ArticlesPorQueElegirBuenosProveedoresRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/ranking': {
      id: '/ranking'
      path: '/ranking'
      fullPath: '/ranking'
      preLoaderRoute: typeof RankingRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/reset-password': {
      id: '/reset-password'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof ResetPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/signin': {
      id: '/_auth/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof AuthSigninRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/_auth/signup': {
      id: '/_auth/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof AuthSignupRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/articles/por-que-elegir-buenos-proveedores': {
      id: '/articles/por-que-elegir-buenos-proveedores'
      path: '/articles/por-que-elegir-buenos-proveedores'
      fullPath: '/articles/por-que-elegir-buenos-proveedores'
      preLoaderRoute: typeof ArticlesPorQueElegirBuenosProveedoresRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/leaderboard': {
      id: '/dashboard/leaderboard'
      path: '/leaderboard'
      fullPath: '/dashboard/leaderboard'
      preLoaderRoute: typeof DashboardLeaderboardRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/shop': {
      id: '/dashboard/shop'
      path: '/shop'
      fullPath: '/dashboard/shop'
      preLoaderRoute: typeof DashboardShopRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/tasks': {
      id: '/dashboard/tasks'
      path: '/tasks'
      fullPath: '/dashboard/tasks'
      preLoaderRoute: typeof DashboardTasksRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
  }
}

interface AuthRouteRouteChildren {
  AuthSigninRoute: typeof AuthSigninRoute
  AuthSignupRoute: typeof AuthSignupRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthSigninRoute: AuthSigninRoute,
  AuthSignupRoute: AuthSignupRoute,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

interface DashboardRouteRouteChildren {
  DashboardLeaderboardRoute: typeof DashboardLeaderboardRoute
  DashboardShopRoute: typeof DashboardShopRoute
  DashboardTasksRoute: typeof DashboardTasksRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
}

const DashboardRouteRouteChildren: DashboardRouteRouteChildren = {
  DashboardLeaderboardRoute: DashboardLeaderboardRoute,
  DashboardShopRoute: DashboardShopRoute,
  DashboardTasksRoute: DashboardTasksRoute,
  DashboardIndexRoute: DashboardIndexRoute,
}

const DashboardRouteRouteWithChildren = DashboardRouteRoute._addFileChildren(
  DashboardRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRouteRoute: AuthRouteRouteWithChildren,
  DashboardRouteRoute: DashboardRouteRouteWithChildren,
  RankingRoute: RankingRoute,
  ResetPasswordRoute: ResetPasswordRoute,
  ArticlesPorQueElegirBuenosProveedoresRoute:
    ArticlesPorQueElegirBuenosProveedoresRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
